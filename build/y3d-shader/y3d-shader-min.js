YUI.add("y3d-shader",function(e,t){e.Program=function(e){this.context=e,this.program=e.createProgram()},e.Program.prototype={attrs:{},uniforms:{},link:function(e,t){var n=this,r=n.context,i=n.program;r.attachShader(i,e),r.attachShader(i,t),r.linkProgram(i);if(!r.getProgramParameter(i,r.LINK_STATUS)){console.error("Error while linking shaders.");return}},setAttr:function(e){var t=this,n=t.context,r=t.program,i=e.name;r.attrs[i]=n.getAttribLocation(r,i),n.enableVertexAttribArray(r.attrs[i])},setUniform:function(e){var t=this,n=t.context,r=t.program,i=e.name;r.uniforms[i]=n.getUniformLocation(r,i)}};var n={ID:{ATTRIBUTE:"attribute",UNIFORM:"uniform",VARYING:"varying"},TYPES:{MAT4:"mat4",SAMPLER2D:"sampler2D",VEC2:"vec2",VEC3:"vec3",VEC4:"vec4"}};e.Shader=function(e,t){this.context=e,this.shader=e.createShader(t)},e.Shader.prototype={compile:function(e){var t=this,n=t.context,r=t.shader;n.shaderSource(r,e),n.compileShader(r);if(!n.getShaderParameter(r,n.COMPILE_STATUS)){console.error("Error while compiling shader.",n.getShaderInfoLog(r));return}}},e.Shader.TEMPLATES={BASIC:{VERTEX:["{{% Y.Array.each(this.variables, function(variable) { %}}","	{{{ variable.id }}} {{{ variable.type }}} {{{ variable.name }}};","{{% }); %}}","	void main(void) {","		gl_Position = projection * modelViewMatrix * vec4(position, 1.0);","{{% Y.Array.each(this.assigns, function(assign) { %}}","		{{{ assign }}}","{{% }); %}}","	}"].join("\n"),FRAGMENT:["	precision mediump float;","{{% Y.Array.each(this.variables, function(variable) { %}}","	{{{ variable.id }}} {{{ variable.type }}} {{{ variable.name }}};","{{% }); %}}","	void main(void) {","		gl_FragColor = colorVarying;","{{% Y.Array.each(this.assigns, function(assign) { %}}","		{{{ assign }}}","{{% }); %}}","	}"].join("\n")}},e.Shader.Builder={compile:function(t,r){e.mix(e.Template.Micro.options,{code:/\{\{%([\s\S]+?)%\}\}/g,escapedOutput:/\{\{(?!%)([\s\S]+?)\}\}/g,rawOutput:/\{\{\{([\s\S]+?)\}\}\}/g},!0);var i=new e.Template,r={variables:[{name:"position",id:n.ID.ATTRIBUTE,type:n.TYPES.VEC3},{name:"projection",id:n.ID.UNIFORM,type:n.TYPES.MAT4},{name:"modelViewMatrix",id:n.ID.UNIFORM,type:n.TYPES.MAT4},{name:"colorVarying",id:n.ID.VARYING,type:n.TYPES.VEC4}],assigns:[]};r.variables.push({name:"textureVarying",id:n.ID.VARYING,type:n.TYPES.VEC2}),e.Array.each(r.variables,function(e){if(e.id!==n.ID.VARYING)return;var t=e.name.slice(0,-7);r.variables.push({name:t,id:n.ID.ATTRIBUTE,type:e.type}),r.assigns.push(e.name+" = "+t+";")}),r={variables:[{name:"colorVarying",id:n.ID.VARYING,type:n.TYPES.VEC4},{name:"textureVarying",id:n.ID.VARYING,type:n.TYPES.VEC2},{name:"sampler",id:n.ID.UNIFORM,type:n.TYPES.SAMPLER2D}],assigns:[]},r.assigns.push("gl_FragColor = gl_FragColor * texture2D(sampler, textureVarying);"),console.log(i.render(e.Shader.TEMPLATES.BASIC.FRAGMENT,r))}}},"0.1",{requires:["template"]});
